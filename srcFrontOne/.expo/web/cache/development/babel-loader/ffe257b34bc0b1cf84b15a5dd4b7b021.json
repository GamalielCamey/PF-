{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Paginator = function Paginator(_ref) {\n  var data = _ref.data,\n      onScroll = _ref.onScroll;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  return _jsx(View, {\n    style: {\n      flexDirection: 'row',\n      height: 70\n    },\n    children: data.map(function (_, i) {\n      var inputRange = [(i - 1) * width, i * width, (i + 1) * width];\n      var dotWidth = onScroll.interpolate({\n        inputRange: inputRange,\n        outputRange: [10, 20, 10],\n        extrapolate: 'clamp'\n      });\n      var opacity = onScroll.interpolate({\n        inputRange: inputRange,\n        outputRange: [0.3, 1, 0.3],\n        extrapolate: 'clamp'\n      });\n      return _jsx(View, {\n        style: [styles.dot, {\n          width: 10\n        }]\n      }, i.toString());\n    })\n  });\n};\n\nexport default Paginator;","map":{"version":3,"names":["React","styles","Paginator","data","onScroll","useWindowDimensions","width","flexDirection","height","map","_","i","inputRange","dotWidth","interpolate","outputRange","extrapolate","opacity","dot","toString"],"sources":["C:/Users/cande/PF-/srcFrontOne/src/components/About/Paginator.js"],"sourcesContent":["import React from \"react\";\r\nimport {View, Animated, useWindowDimensions} from \"react-native\";\r\nimport styles from \"./styles\";\r\n\r\nconst Paginator = ({data, onScroll}) => {\r\n\r\n    const { width } = useWindowDimensions();\r\n\r\n\r\n    return (\r\n        <View style={{flexDirection: 'row', height: 70}}>\r\n            {data.map((_, i) => {\r\n                const inputRange = [(i - 1) * width, i * width, (i + 1) * width];\r\n\r\n                const dotWidth = onScroll.interpolate({\r\n                    inputRange,\r\n                    outputRange: [10, 20, 10],\r\n                    extrapolate: 'clamp',\r\n                })\r\n\r\n                const opacity = onScroll.interpolate({\r\n                    inputRange,\r\n                    outputRange: [0.3, 1, 0.3],\r\n                    extrapolate: 'clamp',\r\n                })\r\n                return <View style={[styles.dot, { width: 10}]} key={i.toString()} />\r\n            })}\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport default Paginator;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,MAAP;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAsB;EAAA,IAApBC,IAAoB,QAApBA,IAAoB;EAAA,IAAdC,QAAc,QAAdA,QAAc;;EAEpC,2BAAkBC,mBAAmB,EAArC;EAAA,IAAQC,KAAR,wBAAQA,KAAR;;EAGA,OACI,KAAC,IAAD;IAAM,KAAK,EAAE;MAACC,aAAa,EAAE,KAAhB;MAAuBC,MAAM,EAAE;IAA/B,CAAb;IAAA,UACKL,IAAI,CAACM,GAAL,CAAS,UAACC,CAAD,EAAIC,CAAJ,EAAU;MAChB,IAAMC,UAAU,GAAG,CAAC,CAACD,CAAC,GAAG,CAAL,IAAUL,KAAX,EAAkBK,CAAC,GAAGL,KAAtB,EAA6B,CAACK,CAAC,GAAG,CAAL,IAAUL,KAAvC,CAAnB;MAEA,IAAMO,QAAQ,GAAGT,QAAQ,CAACU,WAAT,CAAqB;QAClCF,UAAU,EAAVA,UADkC;QAElCG,WAAW,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAFqB;QAGlCC,WAAW,EAAE;MAHqB,CAArB,CAAjB;MAMA,IAAMC,OAAO,GAAGb,QAAQ,CAACU,WAAT,CAAqB;QACjCF,UAAU,EAAVA,UADiC;QAEjCG,WAAW,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,GAAT,CAFoB;QAGjCC,WAAW,EAAE;MAHoB,CAArB,CAAhB;MAKA,OAAO,KAAC,IAAD;QAAM,KAAK,EAAE,CAACf,MAAM,CAACiB,GAAR,EAAa;UAAEZ,KAAK,EAAE;QAAT,CAAb;MAAb,GAA8CK,CAAC,CAACQ,QAAF,EAA9C,CAAP;IACH,CAfA;EADL,EADJ;AAoBH,CAzBD;;AA4BA,eAAejB,SAAf"},"metadata":{},"sourceType":"module"}