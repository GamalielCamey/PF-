{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport $tyW6A$react, { useMemo as $tyW6A$useMemo, useRef as $tyW6A$useRef } from \"react\";\n\nfunction $c1d7fb2ec91bae71$var$Item(props) {\n  return null;\n}\n\n$c1d7fb2ec91bae71$var$Item.getCollectionNode = function* getCollectionNode(props, context) {\n  var childItems = props.childItems,\n      title = props.title,\n      children = props.children;\n  var rendered = props.title || props.children;\n  var textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning)) console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  yield {\n    type: 'item',\n    props: props,\n    rendered: rendered,\n    textValue: textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems(props),\n    childNodes: function* childNodes() {\n      if (childItems) for (var child1 of childItems) {\n        yield {\n          type: 'item',\n          value: child1\n        };\n      } else if (title) {\n        var items = [];\n        $tyW6A$react.Children.forEach(children, function (child) {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n        yield* items;\n      }\n    }\n  };\n};\n\nfunction $c1d7fb2ec91bae71$var$hasChildItems(props) {\n  if (props.hasChildItems != null) return props.hasChildItems;\n  if (props.childItems) return true;\n  if (props.title && $tyW6A$react.Children.count(props.children) > 0) return true;\n  return false;\n}\n\nvar $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 = $c1d7fb2ec91bae71$var$Item;\n\nfunction $9fc4852771d079eb$var$Section(props) {\n  return null;\n}\n\n$9fc4852771d079eb$var$Section.getCollectionNode = function* getCollectionNode(props) {\n  var children = props.children,\n      title = props.title,\n      items1 = props.items;\n  yield {\n    type: 'section',\n    hasChildNodes: true,\n    rendered: title,\n    'aria-label': props['aria-label'],\n    childNodes: function* childNodes() {\n      if (typeof children === 'function') {\n        if (!items1) throw new Error('props.children was a function but props.items is missing');\n\n        for (var item of items1) {\n          yield {\n            type: 'item',\n            value: item,\n            renderer: children\n          };\n        }\n      } else {\n        var items = [];\n        $tyW6A$react.Children.forEach(children, function (child) {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n        yield* items;\n      }\n    }\n  };\n};\n\nvar $9fc4852771d079eb$export$6e2c8f0811a474ce = $9fc4852771d079eb$var$Section;\n\nvar $eb2240fc39a57fa5$export$bf788dd355e3a401 = function () {\n  function $eb2240fc39a57fa5$export$bf788dd355e3a401() {\n    _classCallCheck(this, $eb2240fc39a57fa5$export$bf788dd355e3a401);\n\n    this.cache = new WeakMap();\n  }\n\n  _createClass($eb2240fc39a57fa5$export$bf788dd355e3a401, [{\n    key: \"build\",\n    value: function build(props, context) {\n      var _this = this;\n\n      this.context = context;\n      return $eb2240fc39a57fa5$var$iterable(function () {\n        return _this.iterateCollection(props);\n      });\n    }\n  }, {\n    key: \"iterateCollection\",\n    value: function* iterateCollection(props) {\n      var children = props.children,\n          items = props.items;\n\n      if (typeof children === 'function') {\n        if (!items) throw new Error('props.children was a function but props.items is missing');\n\n        for (var item of props.items) {\n          yield* this.getFullNode({\n            value: item\n          }, {\n            renderer: children\n          });\n        }\n      } else {\n        var _items = [];\n        $tyW6A$react.Children.forEach(children, function (child) {\n          _items.push(child);\n        });\n        var index = 0;\n\n        for (var _item of _items) {\n          var nodes = this.getFullNode({\n            element: _item,\n            index: index\n          }, {});\n\n          for (var node of nodes) {\n            index++;\n            yield node;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getKey\",\n    value: function getKey(item, partialNode, state, parentKey) {\n      if (item.key != null) return item.key;\n      if (partialNode.type === 'cell' && partialNode.key != null) return \"\" + parentKey + partialNode.key;\n      var v = partialNode.value;\n\n      if (v != null) {\n        var _key;\n\n        var key = (_key = v.key) !== null && _key !== void 0 ? _key : v.id;\n        if (key == null) throw new Error('No key found for item');\n        return key;\n      }\n\n      return parentKey ? parentKey + \".\" + partialNode.index : \"$.\" + partialNode.index;\n    }\n  }, {\n    key: \"getChildState\",\n    value: function getChildState(state, partialNode) {\n      return {\n        renderer: partialNode.renderer || state.renderer\n      };\n    }\n  }, {\n    key: \"getFullNode\",\n    value: function* getFullNode(partialNode, state, parentKey, parentNode) {\n      var element = partialNode.element;\n\n      if (!element && partialNode.value && state && state.renderer) {\n        var cached = this.cache.get(partialNode.value);\n\n        if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n          cached.index = partialNode.index;\n          cached.parentKey = parentNode ? parentNode.key : null;\n          yield cached;\n          return;\n        }\n\n        element = state.renderer(partialNode.value);\n      }\n\n      if ($tyW6A$react.isValidElement(element)) {\n        var type = element.type;\n\n        if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {\n          var name = typeof element.type === 'function' ? element.type.name : element.type;\n          throw new Error(\"Unknown element <\" + name + \"> in collection.\");\n        }\n\n        var childNodes = type.getCollectionNode(element.props, this.context);\n        var index = partialNode.index;\n        var result = childNodes.next();\n\n        while (!result.done && result.value) {\n          var childNode = result.value;\n          partialNode.index = index;\n          var nodeKey = childNode.key;\n          if (!nodeKey) nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);\n          var nodes = this.getFullNode(_objectSpread(_objectSpread({}, childNode), {}, {\n            key: nodeKey,\n            index: index,\n            wrapper: $eb2240fc39a57fa5$var$compose(partialNode.wrapper, childNode.wrapper)\n          }), this.getChildState(state, childNode), parentKey ? \"\" + parentKey + element.key : element.key, parentNode);\n\n          var children = _toConsumableArray(nodes);\n\n          for (var _node of children) {\n            _node.value = childNode.value || partialNode.value;\n            if (_node.value) this.cache.set(_node.value, _node);\n            if (partialNode.type && _node.type !== partialNode.type) throw new Error(\"Unsupported type <\" + $eb2240fc39a57fa5$var$capitalize(_node.type) + \"> in <\" + $eb2240fc39a57fa5$var$capitalize(parentNode.type) + \">. Only <\" + $eb2240fc39a57fa5$var$capitalize(partialNode.type) + \"> is supported.\");\n            index++;\n            yield _node;\n          }\n\n          result = childNodes.next(children);\n        }\n\n        return;\n      }\n\n      if (partialNode.key == null) return;\n      var builder = this;\n      var node = {\n        type: partialNode.type,\n        props: partialNode.props,\n        key: partialNode.key,\n        parentKey: parentNode ? parentNode.key : null,\n        value: partialNode.value,\n        level: parentNode ? parentNode.level + 1 : 0,\n        index: partialNode.index,\n        rendered: partialNode.rendered,\n        textValue: partialNode.textValue,\n        'aria-label': partialNode['aria-label'],\n        wrapper: partialNode.wrapper,\n        shouldInvalidate: partialNode.shouldInvalidate,\n        hasChildNodes: partialNode.hasChildNodes,\n        childNodes: $eb2240fc39a57fa5$var$iterable(function* () {\n          if (!partialNode.hasChildNodes) return;\n          var index = 0;\n\n          for (var child of partialNode.childNodes()) {\n            if (child.key != null) child.key = \"\" + node.key + child.key;\n            child.index = index;\n\n            var _nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);\n\n            for (var node1 of _nodes) {\n              index++;\n              yield node1;\n            }\n          }\n        })\n      };\n      yield node;\n    }\n  }]);\n\n  return $eb2240fc39a57fa5$export$bf788dd355e3a401;\n}();\n\nfunction $eb2240fc39a57fa5$var$iterable(iterator) {\n  var cache = [];\n  var iterable = null;\n  return _defineProperty({}, Symbol.iterator, function* () {\n    for (var item of cache) {\n      yield item;\n    }\n\n    if (!iterable) iterable = iterator();\n\n    for (var item1 of iterable) {\n      cache.push(item1);\n      yield item1;\n    }\n  });\n}\n\nfunction $eb2240fc39a57fa5$var$compose(outer, inner) {\n  if (outer && inner) return function (element) {\n    return outer(inner(element));\n  };\n  if (outer) return outer;\n  if (inner) return inner;\n}\n\nfunction $eb2240fc39a57fa5$var$capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nfunction $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context) {\n  var invalidators = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var builder = $tyW6A$useMemo(function () {\n    return new $eb2240fc39a57fa5$export$bf788dd355e3a401();\n  }, []);\n  var prev = $tyW6A$useRef(null);\n  return $tyW6A$useMemo(function () {\n    var nodes = builder.build(props, context);\n    prev.current = factory(nodes, prev.current);\n    return prev.current;\n  }, [builder, props.children, props.items, context].concat(_toConsumableArray(invalidators)));\n}\n\nvar $453cc9f0df89c0a5$var$cache = new WeakMap();\n\nfunction $453cc9f0df89c0a5$export$77d5aafae4e095b2(collection) {\n  var count = $453cc9f0df89c0a5$var$cache.get(collection);\n  if (count != null) return count;\n  count = 0;\n\n  for (var item of collection) {\n    if (item.type === 'section') count += $453cc9f0df89c0a5$export$77d5aafae4e095b2(item.childNodes);else count++;\n  }\n\n  $453cc9f0df89c0a5$var$cache.set(collection, count);\n  return count;\n}\n\nexport { $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 as Item, $9fc4852771d079eb$export$6e2c8f0811a474ce as Section, $7613b1592d41b092$export$6cd28814d92fa9c9 as useCollection, $453cc9f0df89c0a5$export$77d5aafae4e095b2 as getItemCount };","map":{"version":3,"mappings":"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","names":["$c1d7fb2ec91bae71$var$Item","props","getCollectionNode","context","childItems","title","children","rendered","textValue","suppressTextValueWarning","console","warn","type","hasChildNodes","$c1d7fb2ec91bae71$var$hasChildItems","childNodes","child1","value","items","$tyW6A$react","Children","forEach","child","push","element","hasChildItems","count","$c1d7fb2ec91bae71$export$6d08773d2e66f8f2","$9fc4852771d079eb$var$Section","items1","Error","item","renderer","$9fc4852771d079eb$export$6e2c8f0811a474ce","$eb2240fc39a57fa5$export$bf788dd355e3a401","cache","WeakMap","$eb2240fc39a57fa5$var$iterable","iterateCollection","getFullNode","index","nodes","node","partialNode","state","parentKey","key","v","_key","id","parentNode","cached","get","shouldInvalidate","isValidElement","name","result","next","done","childNode","nodeKey","getKey","wrapper","$eb2240fc39a57fa5$var$compose","getChildState","set","$eb2240fc39a57fa5$var$capitalize","builder","level","node1","iterator","iterable","Symbol","item1","outer","inner","str","toUpperCase","slice","$7613b1592d41b092$export$6cd28814d92fa9c9","factory","invalidators","$tyW6A$useMemo","prev","$tyW6A$useRef","build","current","$453cc9f0df89c0a5$var$cache","$453cc9f0df89c0a5$export$77d5aafae4e095b2","collection"],"sources":["packages/@react-stately/collections/src/Item.ts","packages/@react-stately/collections/src/Section.ts","packages/@react-stately/collections/src/CollectionBuilder.ts","packages/@react-stately/collections/src/useCollection.ts","packages/@react-stately/collections/src/getItemCount.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ItemElement, ItemProps} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\n\nfunction Item<T>(props: ItemProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nItem.getCollectionNode = function* getCollectionNode<T>(props: ItemProps<T>, context: any): Generator<PartialNode<T>> {\n  let {childItems, title, children} = props;\n\n  let rendered = props.title || props.children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n\n  // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.\n  if (!textValue && !context?.suppressTextValueWarning) {\n    console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  }\n\n  yield {\n    type: 'item',\n    props: props,\n    rendered,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: hasChildItems(props),\n    *childNodes() {\n      if (childItems) {\n        for (let child of childItems) {\n          yield {\n            type: 'item',\n            value: child\n          };\n        }\n      } else if (title) {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child as ItemElement<T>\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\nfunction hasChildItems<T>(props: ItemProps<T>) {\n  if (props.hasChildItems != null) {\n    return props.hasChildItems;\n  }\n\n  if (props.childItems) {\n    return true;\n  }\n\n  if (props.title && React.Children.count(props.children) > 0) {\n    return true;\n  }\n\n  return false;\n}\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport {_Item as Item};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\nimport {SectionProps} from '@react-types/shared';\n\nfunction Section<T>(props: SectionProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nSection.getCollectionNode = function* getCollectionNode<T>(props: SectionProps<T>): Generator<PartialNode<T>> {\n  let {children, title, items} = props;\n  yield {\n    type: 'section',\n    hasChildNodes: true,\n    rendered: title,\n    'aria-label': props['aria-label'],\n    *childNodes() {\n      if (typeof children === 'function') {\n        if (!items) {\n          throw new Error('props.children was a function but props.items is missing');\n        }\n    \n        for (let item of items) {\n          yield {\n            type: 'item',\n            value: item,\n            renderer: children\n          };\n        }\n      } else {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Section = Section as <T>(props: SectionProps<T>) => JSX.Element;\nexport {_Section as Section};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBase, CollectionElement, Node} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {Key, ReactElement} from 'react';\n\ninterface CollectionBuilderState {\n  renderer?: (value: any) => ReactElement\n}\n\nexport class CollectionBuilder<T extends object> {\n  private context?: unknown;\n  private cache: WeakMap<T, Node<T>> = new WeakMap();\n\n  build(props: CollectionBase<T>, context?: unknown) {\n    this.context = context;\n    return iterable(() => this.iterateCollection(props));\n  }\n\n  private *iterateCollection(props: CollectionBase<T>) {\n    let {children, items} = props;\n\n    if (typeof children === 'function') {\n      if (!items) {\n        throw new Error('props.children was a function but props.items is missing');\n      }\n\n      for (let item of props.items) {\n        yield* this.getFullNode({\n          value: item\n        }, {renderer: children});\n      }\n    } else {\n      let items: CollectionElement<T>[] = [];\n      React.Children.forEach(children, child => {\n        items.push(child);\n      });\n\n      let index = 0;\n      for (let item of items) {\n        let nodes = this.getFullNode({\n          element: item,\n          index: index\n        }, {});\n\n        for (let node of nodes) {\n          index++;\n          yield node;\n        }\n      }\n    }\n  }\n\n  private getKey(item: CollectionElement<T>, partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key): Key {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (partialNode.type === 'cell' && partialNode.key != null) {\n      return `${parentKey}${partialNode.key}`;\n    }\n\n    let v = partialNode.value as any;\n    if (v != null) {\n      let key = v.key ?? v.id;\n      if (key == null) {\n        throw new Error('No key found for item');\n      }\n\n      return key;\n    }\n\n    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n  }\n\n  private getChildState(state: CollectionBuilderState, partialNode: PartialNode<T>) {\n    return {\n      renderer: partialNode.renderer || state.renderer\n    };\n  }\n\n  private *getFullNode(partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key, parentNode?: Node<T>): Generator<Node<T>> {\n    // If there's a value instead of an element on the node, and a parent renderer function is available,\n    // use it to render an element for the value.\n    let element = partialNode.element;\n    if (!element && partialNode.value && state && state.renderer) {\n      let cached = this.cache.get(partialNode.value);\n      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n        cached.index = partialNode.index;\n        cached.parentKey = parentNode ? parentNode.key : null;\n        yield cached;\n        return;\n      }\n\n      element = state.renderer(partialNode.value);\n    }\n\n    // If there's an element with a getCollectionNode function on its type, then it's a supported component.\n    // Call this function to get a partial node, and recursively build a full node from there.\n    if (React.isValidElement(element)) {\n      let type = element.type as any;\n      if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {\n        let name = typeof element.type === 'function' ? element.type.name : element.type;\n        throw new Error(`Unknown element <${name}> in collection.`);\n      }\n\n      let childNodes = type.getCollectionNode(element.props, this.context) as Generator<PartialNode<T>, void, Node<T>[]>;\n      let index = partialNode.index;\n      let result = childNodes.next();\n      while (!result.done && result.value) {\n        let childNode = result.value;\n\n        partialNode.index = index;\n\n        let nodeKey = childNode.key;\n        if (!nodeKey) {\n          nodeKey = childNode.element ? null : this.getKey(element as CollectionElement<T>, partialNode, state, parentKey);\n        }\n\n        let nodes = this.getFullNode({\n          ...childNode,\n          key: nodeKey,\n          index,\n          wrapper: compose(partialNode.wrapper, childNode.wrapper)\n        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n\n        let children = [...nodes];\n        for (let node of children) {\n          // Cache the node based on its value\n          node.value = childNode.value || partialNode.value;\n          if (node.value) {\n            this.cache.set(node.value, node);\n          }\n\n          // The partial node may have specified a type for the child in order to specify a constraint.\n          // Verify that the full node that was built recursively matches this type.\n          if (partialNode.type && node.type !== partialNode.type) {\n            throw new Error(`Unsupported type <${capitalize(node.type)}> in <${capitalize(parentNode.type)}>. Only <${capitalize(partialNode.type)}> is supported.`);\n          }\n\n          index++;\n          yield node;\n        }\n\n        result = childNodes.next(children);\n      }\n\n      return;\n    }\n\n    // Ignore invalid elements\n    if (partialNode.key == null) {\n      return;\n    }\n\n    // Create full node\n    let builder = this;\n    let node: Node<T> = {\n      type: partialNode.type,\n      props: partialNode.props,\n      key: partialNode.key,\n      parentKey: parentNode ? parentNode.key : null,\n      value: partialNode.value,\n      level: parentNode ? parentNode.level + 1 : 0,\n      index: partialNode.index,\n      rendered: partialNode.rendered,\n      textValue: partialNode.textValue,\n      'aria-label': partialNode['aria-label'],\n      wrapper: partialNode.wrapper,\n      shouldInvalidate: partialNode.shouldInvalidate,\n      hasChildNodes: partialNode.hasChildNodes,\n      childNodes: iterable(function *() {\n        if (!partialNode.hasChildNodes) {\n          return;\n        }\n\n        let index = 0;\n        for (let child of partialNode.childNodes()) {\n          // Ensure child keys are globally unique by prepending the parent node's key\n          if (child.key != null) {\n            // TODO: Remove this line entirely and enforce that users always provide unique keys.\n            // Currently this line will have issues when a parent has a key `a` and a child with key `bc`\n            // but another parent has key `ab` and its child has a key `c`. The combined keys would result in both\n            // children having a key of `abc`.\n            child.key = `${node.key}${child.key}`;\n          }\n\n          child.index = index;\n          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);\n          for (let node of nodes) {\n            index++;\n            yield node;\n          }\n        }\n      })\n    };\n\n    yield node;\n  }\n}\n\n// Wraps an iterator function as an iterable object, and caches the results.\nfunction iterable<T>(iterator: () => IterableIterator<Node<T>>): Iterable<Node<T>> {\n  let cache = [];\n  let iterable = null;\n  return {\n    *[Symbol.iterator]() {\n      for (let item of cache) {\n        yield item;\n      }\n\n      if (!iterable) {\n        iterable = iterator();\n      }\n\n      for (let item of iterable) {\n        cache.push(item);\n        yield item;\n      }\n    }\n  };\n}\n\ntype Wrapper = (element: ReactElement) => ReactElement;\nfunction compose(outer: Wrapper | void, inner: Wrapper | void): Wrapper {\n  if (outer && inner) {\n    return (element) => outer(inner(element));\n  }\n\n  if (outer) {\n    return outer;\n  }\n\n  if (inner) {\n    return inner;\n  }\n}\n\nfunction capitalize(str: string) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionBase, Node} from '@react-types/shared';\nimport {CollectionBuilder} from './CollectionBuilder';\nimport {useMemo, useRef} from 'react';\n\ntype CollectionFactory<T, C extends Collection<Node<T>>> = (node: Iterable<Node<T>>, prev: C | null) => C;\n\nexport function useCollection<T extends object, C extends Collection<Node<T>> = Collection<Node<T>>>(props: CollectionBase<T>, factory: CollectionFactory<T, C>, context?: unknown, invalidators: Array<any> = []): C {\n  let builder = useMemo(() => new CollectionBuilder<T>(), []);\n\n  let prev = useRef<C>(null);\n  return useMemo(() => {\n    let nodes = builder.build(props, context);\n    prev.current = factory(nodes, prev.current);\n    return prev.current;\n  // Don't invalidate when any prop changes, just the two we care about.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [builder, props.children, props.items, context, ...invalidators]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Node} from '@react-types/shared';\n\nconst cache = new WeakMap<Iterable<unknown>, number>();\n\nexport function getItemCount<T>(collection: Iterable<Node<T>>): number {\n  let count = cache.get(collection);\n  if (count != null) {\n    return count;\n  }\n\n  count = 0;\n  for (let item of collection) {\n    if (item.type === 'section') {\n      count += getItemCount(item.childNodes);\n    } else {\n      count++;\n    }\n  }\n\n  cache.set(collection, count);\n  return count;\n}\n"]},"metadata":{},"sourceType":"module"}