{"ast":null,"code":"import React from \"react\";\nimport { useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFlights } from \"../../Redux/Actions/flights\";\nimport FlightCard from \"../FlightCard/FlightCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Flights = function Flights() {\n  var dispatch = useDispatch();\n  var allFlights = useSelector(function (state) {\n    return state.flights;\n  });\n  useEffect(function () {\n    dispatch(getFlights());\n  }, [dispatch]);\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"FLIGTHS PAGE\"\n    }), allFlights && allFlights.map(function (f) {\n      return _jsx(FlightCard, {\n        departure: f.departureCity,\n        departureTime: f.departureTime,\n        destination: f.arrivalCity,\n        destinationTime: f.arrivalTime,\n        fare: f.defaultFare\n      }, f.id);\n    })]\n  });\n};\n\nexport default Flights;","map":{"version":3,"names":["React","useEffect","styles","useDispatch","useSelector","getFlights","FlightCard","Flights","dispatch","allFlights","state","flights","container","map","f","departureCity","departureTime","arrivalCity","arrivalTime","defaultFare","id"],"sources":["C:/Users/usuario/Desktop/Jacqueline/ProgramaciÃ³n/Proyecto Final/PF-/srcFrontOne/src/components/Flights/Flights.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { ScrollView, Text } from \"react-native\";\r\nimport styles from \"./styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFlights } from \"../../Redux/Actions/flights\";\r\nimport FlightCard from \"../FlightCard/FlightCard\";\r\n\r\nconst Flights = () => {\r\n\r\n    let dispatch  = useDispatch();\r\n    let allFlights = useSelector((state) => state.flights);\r\n\r\n    useEffect(() => {\r\n        dispatch(getFlights())\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <ScrollView style={styles.container}>\r\n            <Text>FLIGTHS PAGE</Text>\r\n            { allFlights && allFlights.map(f => \r\n                <FlightCard \r\n                key={f.id} \r\n                departure={f.departureCity} \r\n                departureTime={f.departureTime} \r\n                destination={f.arrivalCity}\r\n                destinationTime={f.arrivalTime}\r\n                fare={f.defaultFare}\r\n                />\r\n            )}\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nexport default Flights;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,OAAOC,MAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT;AACA,OAAOC,UAAP;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;EAElB,IAAIC,QAAQ,GAAIL,WAAW,EAA3B;EACA,IAAIM,UAAU,GAAGL,WAAW,CAAC,UAACM,KAAD;IAAA,OAAWA,KAAK,CAACC,OAAjB;EAAA,CAAD,CAA5B;EAEAV,SAAS,CAAC,YAAM;IACZO,QAAQ,CAACH,UAAU,EAAX,CAAR;EACH,CAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;EAIA,OACI,MAAC,UAAD;IAAY,KAAK,EAAEN,MAAM,CAACU,SAA1B;IAAA,WACI,KAAC,IAAD;MAAA;IAAA,EADJ,EAEMH,UAAU,IAAIA,UAAU,CAACI,GAAX,CAAe,UAAAC,CAAC;MAAA,OAC5B,KAAC,UAAD;QAEA,SAAS,EAAEA,CAAC,CAACC,aAFb;QAGA,aAAa,EAAED,CAAC,CAACE,aAHjB;QAIA,WAAW,EAAEF,CAAC,CAACG,WAJf;QAKA,eAAe,EAAEH,CAAC,CAACI,WALnB;QAMA,IAAI,EAAEJ,CAAC,CAACK;MANR,GACKL,CAAC,CAACM,EADP,CAD4B;IAAA,CAAhB,CAFpB;EAAA,EADJ;AAeH,CAxBD;;AA0BA,eAAeb,OAAf"},"metadata":{},"sourceType":"module"}