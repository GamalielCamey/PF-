{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomDatePicker = function CustomDatePicker(_ref) {\n  var toDatePicker = _ref.toDatePicker;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      datePickerDepart = _useState2[0],\n      setDatePickerDepart = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var showDatePickerDepart = function showDatePickerDepart() {\n    setDatePickerDepart(true);\n  };\n\n  var onDateSelectedDepart = function onDateSelectedDepart(e, value) {\n    toDatePicker(date);\n    setDate(value);\n    setDatePickerDepart(false);\n    console.log(date);\n  };\n\n  return _jsxs(View, {\n    style: styles.MainContainer,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: date.toDateString()\n    }), datePickerDepart && _jsx(DateTimePicker, {\n      value: date,\n      mode: 'date',\n      display: Platform.OS === 'ios' ? 'spinner' : 'default',\n      is24Hour: true,\n      onChange: onDateSelectedDepart,\n      style: styles.datePicker\n    }), !datePickerDepart && _jsx(View, {\n      style: {\n        margin: 10,\n        minHeight: 100\n      },\n      children: _jsx(Button, {\n        title: \"Select Depart Date\",\n        color: \"#376dac\",\n        onPress: showDatePickerDepart\n      })\n    })]\n  });\n};\n\nexport default CustomDatePicker;","map":{"version":3,"names":["React","useState","DateTimePicker","styles","CustomDatePicker","toDatePicker","datePickerDepart","setDatePickerDepart","Date","date","setDate","showDatePickerDepart","onDateSelectedDepart","e","value","console","log","MainContainer","text","toDateString","Platform","OS","datePicker","margin","minHeight"],"sources":["C:/PROGRAMACION/PF/PF-/srcFrontOne/src/utils/CustomDatePicker/CustomDatePicker.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Text, View, SafeAreaView, Button } from 'react-native'\r\nimport DateTimePicker from '@react-native-community/datetimepicker'\r\nimport styles from './styles'\r\n\r\n\r\nconst CustomDatePicker = ({ toDatePicker }) => {\r\n  const [datePickerDepart, setDatePickerDepart] = useState(false)\r\n  const [date, setDate] = useState(new Date())\r\n\r\n  const showDatePickerDepart = () => {\r\n    setDatePickerDepart(true)\r\n  }\r\n  const onDateSelectedDepart = (e, value) => {\r\n    toDatePicker(date)\r\n    setDate(value)\r\n    setDatePickerDepart(false)\r\n    console.log(date)\r\n  }\r\n  return (\r\n    <View style={styles.MainContainer}>\r\n      <Text style={styles.text}>{date.toDateString()}</Text>\r\n      {datePickerDepart && (\r\n        <DateTimePicker\r\n          value={date}\r\n          mode={'date'}\r\n          display={Platform.OS === 'ios' ? 'spinner' : 'default'}\r\n          is24Hour={true}\r\n          onChange={onDateSelectedDepart}\r\n          style={styles.datePicker}\r\n        />\r\n      )}\r\n      {!datePickerDepart && (\r\n        <View style={{ margin: 10, minHeight: 100 }}>\r\n          <Button\r\n            title='Select Depart Date'\r\n            color='#376dac'\r\n            onPress={showDatePickerDepart} />\r\n        </View>\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default CustomDatePicker;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const CustomDatePicker = ({ toDatePicker }) => {\r\n//   const [datePickerDepart, setDatePickerDepart] = useState(false)\r\n//   const [date, setDate] = useState(new Date())\r\n\r\n//   const showDatePickerDepart = () => {\r\n//     setDatePickerDepart(true)\r\n//   }\r\n//   const onDateSelectedDepart = (e, value) => {\r\n//     toDatePicker(date)\r\n//     setDate(value)\r\n//     setDatePickerDepart(false)\r\n//     console.log(date)\r\n//   }\r\n//   return (\r\n//     <View style={styles.MainContainer}>\r\n//       <Text style={styles.text}>{date.toDateString()}</Text>\r\n//       {datePickerDepart && (\r\n//         <DateTimePicker\r\n//           value={date}\r\n//           mode={'date'}\r\n//           display={Platform.OS === 'ios' ? 'spinner' : 'default'}\r\n//           is24Hour={true}\r\n//           onChange={onDateSelectedDepart}\r\n//           style={styles.datePicker}\r\n//         />\r\n//       )}\r\n//       {!datePickerDepart && (\r\n//         <View style={{ margin: 10, minHeight: 100 }}>\r\n//           <Button\r\n//             title='Select Depart Date'\r\n//             color='#376dac'\r\n//             onPress={showDatePickerDepart} />\r\n//         </View>\r\n//       )}\r\n//     </View>\r\n//   )\r\n// }\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,MAAP;;;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAsB;EAAA,IAAnBC,YAAmB,QAAnBA,YAAmB;;EAC7C,gBAAgDJ,QAAQ,CAAC,KAAD,CAAxD;EAAA;EAAA,IAAOK,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,iBAAwBN,QAAQ,CAAC,IAAIO,IAAJ,EAAD,CAAhC;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;IACjCJ,mBAAmB,CAAC,IAAD,CAAnB;EACD,CAFD;;EAGA,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,CAAD,EAAIC,KAAJ,EAAc;IACzCT,YAAY,CAACI,IAAD,CAAZ;IACAC,OAAO,CAACI,KAAD,CAAP;IACAP,mBAAmB,CAAC,KAAD,CAAnB;IACAQ,OAAO,CAACC,GAAR,CAAYP,IAAZ;EACD,CALD;;EAMA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEN,MAAM,CAACc,aAApB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAEd,MAAM,CAACe,IAApB;MAAA,UAA2BT,IAAI,CAACU,YAAL;IAA3B,EADF,EAEGb,gBAAgB,IACf,KAAC,cAAD;MACE,KAAK,EAAEG,IADT;MAEE,IAAI,EAAE,MAFR;MAGE,OAAO,EAAEW,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,SAH/C;MAIE,QAAQ,EAAE,IAJZ;MAKE,QAAQ,EAAET,oBALZ;MAME,KAAK,EAAET,MAAM,CAACmB;IANhB,EAHJ,EAYG,CAAChB,gBAAD,IACC,KAAC,IAAD;MAAM,KAAK,EAAE;QAAEiB,MAAM,EAAE,EAAV;QAAcC,SAAS,EAAE;MAAzB,CAAb;MAAA,UACE,KAAC,MAAD;QACE,KAAK,EAAC,oBADR;QAEE,KAAK,EAAC,SAFR;QAGE,OAAO,EAAEb;MAHX;IADF,EAbJ;EAAA,EADF;AAuBD,CApCD;;AAsCA,eAAeP,gBAAf"},"metadata":{},"sourceType":"module"}